// 文字設定
body {
    background-color: $bg;
    line-height: 1.5;
    font-family: "Roboto", "PingFang TC", "Microsoft JhengHei", sans-serif;
    color: $text-AAA;
}

body,
html {
    font-size: 16px;
    ::selection {
        background: $contrast;
        color: white;
    }
}

@media (min-width: 1920px) {
    body,
    html {
        font-size: 20px;
    }
}
@media (min-width: 1680px) {
    body,
    html {
        font-size: 18px;
    }
}
@media (min-width: 769px) and (max-width: 1679px) {
    body,
    html {
        font-size: 16px;
    }
}
@media (max-width: 768px) {
    body,
    html {
        font-size: 14px; 
    }
}


a {
    color: $text-AA;
    text-decoration: none;
    transition: all 0.15s ease 0s;
}
a:hover {
    color: $Primary;
    text-decoration: none;
}

a.link-primary {
    color: $Primary;
}
a.link-primary:hover {
    color: $DarkPrimary;
}

a.link-underline {
    color: $DarkPrimary;
    text-decoration: underline;
}
a.link-underline:hover {
    color: $Primary;
}

.tag {
    display: inline-block;
    font-size: 0.9rem;
    padding: 0 0.5rem;
    border: 1px solid $Primary;
    border-radius: 4px;
    color: $Primary;
    margin-bottom: 0.2rem;
    cursor: pointer;
    & + .tag {
        margin-left: 0.3rem;
    }
}

span,
p,
label,
li,
div {
    color: inherit;
}

select,
input,
select + label,
input + label {
    color: $text-AAA;
}

@for $i from 1 to 6 {
    .text-h#{$i} {
        font-weight: bold;
        font-size: 1rem + (6 - $i) * 0.2rem;
        padding-bottom: (6 - $i) * 0.3rem;
        color: $text-AAA;
    }
    .text-h5{
        padding-bottom: 1.5rem;
    }
}

.text-primary {
    color: $Primary !important;
}
.bold {
    font-weight: bold !important;
}
.text-secondary {
    color: $Secondary !important;
}
.text-A {
    color: $text-A !important;
}
.text-AA {
    color: $text-AA !important;
}
.text-AAA {
    color: $text-AAA !important;
}
.text-AAAA {
    color: $text-AAAA !important;
}
.text-bfPrimary {
    color: $bfPrimary !important;
}

.readonly {
    font-size: 1.1rem;
    color: $text-AAAA;
    margin-top: -0.3rem;
    line-height: 1.5;
    padding: 0.6rem 0;
}
.fa-info-circle {
    margin-left: 0.5rem;
}

.b-caption {
    color: $text-A;
    font-size: 0.8rem;
}

.b-caption-l {
    color: $text-A;
    font-size: 0.95rem;
}

.t-r {
    text-align: right !important;
}

.t-l {
    text-align: left !important;
}

.t-c {
    text-align: center !important;
}

.breadcrum {
    font-size: .875rem;
    line-height: 3;
    padding-top: 0.5rem;
    vertical-align: bottom;
    color: $text-AA;
}

.title-wrap {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    flex-wrap: wrap;
    margin-bottom: 1rem;
    border-bottom: 1px solid $gray-05;
    .b-caption {
        width: 100%;
        margin-top: -0.8rem;
        margin-bottom: 0.5rem;
    }
}

.fz-md {
    font-size: 1rem !important;
}

.fz-sm {
    font-size: .75rem !important;
}
.index-title {
    font-size: 2rem;
    padding-top: 5rem;
    color: $gray-3;
    p {
        font-size: 1rem;
    }
}

/* 404 的抖動字*/

@mixin glitchCopy {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.glitch {
    position: relative;
    color: white;
    font-size: 4em;
    letter-spacing: 0.5em;
    animation: glitch-skew 1s infinite linear alternate-reverse;

    // Creates a copy before our text.
    &::before {
        // Duplicates our text with the mixin.
        @include glitchCopy;
        // Scoots text slightly to the left for the color offset.
        left: 2px;
        // Creates the color 'shadow' that happens on the glitch.
        text-shadow: -2px 0 #ff00c1;
        /* Creates an initial clip for our glitch. This works in
		a typical top,right,bottom,left fashion and creates a mask
		to only show a certain part of the glitch at a time. */
        clip: rect(44px, 450px, 56px, 0);
        /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
		with an alternating animation to keep things fresh. */
        animation: glitch-anim 5s infinite linear alternate-reverse;
    }

    // Creates a copy after our text. Note comments from ::before.
    &::after {
        @include glitchCopy;
        left: -2px;
        text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
        animation: glitch-anim2 1s infinite linear alternate-reverse;
    }
}

@keyframes glitch-anim {
    $steps: 20;
    @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
            clip: rect(random(100) + px, 9999px, random(100) + px, 0);
            transform: skew((random(100) / 100) + deg);
        }
    }
}

// Same deal, just duplicated for ultra randomness.
@keyframes glitch-anim2 {
    $steps: 20;
    @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
            clip: rect(random(100) + px, 9999px, random(100) + px, 0);
            transform: skew((random(100) / 100) + deg);
        }
    }
}

// Does the same deal as before, but now only skews. Used for main text.
@keyframes glitch-skew {
    $steps: 10;
    @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
            transform: skew((random(10) - 5) + deg);
        }
    }
}
